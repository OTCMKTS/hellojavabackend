version: '3.4'
services:
  app:
    # Build at dd-trace-rb level to copy in current code
    # and use it as the `ddtrace` gem.
    build:
      context: ../../..
      dockerfile: integration/apps/rack/Dockerfile-ci
      args:
        BASE_IMAGE: ${APP_IMAGE}
    depends_on:
      - redis
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
      - REDIS_URL=redis://redis:6379
      - DD_AGENT_HOST=ddagent
      - DD_METRIC_AGENT_PORT=8125
      - DD_TRACE_AGENT_PORT=8126
      - DD_HEALTH_METRICS_ENABLED=true
      - DD_SERVICE=acme-rack
      - DD_PROFILING_ENABLED=true
      # Use these to choose what is run
      - DD_DEMO_ENV_PROCESS # needs to be specified, see README for available options
      - DD_DEMO_ENV_FEATURES=tracing,profiling
    expose:
      - "80"
    stdin_open: true
    tty: true
  resque:
    build:
      context: ../../..
      dockerfile: integration/apps/rack/Dockerfile-ci
      args:
        BASE_IMAGE: ${APP_IMAGE}
    depends_on:
      - redis
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
      - REDIS_URL=redis://redis:6379
      - DD_AGENT_HOST=ddagent
      - DD_METRIC_AGENT_PORT=8125
      - DD_TRACE_AGENT_PORT=8126
      - DD_HEALTH_METRICS_ENABLED=true
      - DD_SERVICE=acme-rack-resque
      - DD_PROFILING_ENABLED=true
      # Use these to choose what is run
      - DD_DEMO_ENV_FEATURES=tracing,profiling
    command:
      bin/resque
    stdin_open: true
    tty: true
  sidekiq:
    build:
      context: ../../..
      dockerfile: integration/apps/rack/Dockerfile-ci
      args:
        BASE_IMAGE: ${APP_IMAGE}
 